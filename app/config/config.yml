imports:
    - { resource: parameters.yml }
    - { resource: security.yml }

framework:
    #esi:             ~
    translator:      { fallback: %locale% }
    secret:          %secret%
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:
        csrf_protection: false
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
        save_path:   "%kernel.root_dir%/../var/sessions/%kernel.environment%"
    fragments:       ~
    http_method_override: true
    assets: ~

nelmio_api_doc:
  name: api
  swagger:
    api_base_path:        /api
    swagger_version:      1
    model_naming_strategy: 'last_segment_only'
    api_version:          1
    info:
        title:                Api
        description:          My awesome Symfony2 app!
        TermsOfServiceUrl:    ~
        contact:              ~
        license:              ~
        licenseUrl:           ~
  sandbox:
    authentication:
        delivery: header
        name:     X-API-TOKEN

# Twig Configuration
twig:
    debug:            %kernel.debug%
    strict_variables: %kernel.debug%
    exception_controller: 'FOS\RestBundle\Controller\ExceptionController::showAction'

# Assetic Configuration
assetic:
    debug:          %kernel.debug%
    use_controller: false
    bundles:        [ ]
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: %kernel.root_dir%/Resources/java/compiler.jar
        #yui_css:
        #    jar: %kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar

# Doctrine Configuration
doctrine:
    dbal:
        driver:   %database_driver%
        host:     %database_host%
        port:     %database_port%
        dbname:   %database_name%
        user:     %database_user%
        password: %database_password%
        charset:  UTF8
        # if using pdo_sqlite as your database driver, add the path in parameters.yml
        # e.g. database_path: %kernel.root_dir%/data/data.db3
        # path:     %database_path%

    orm:
        auto_generate_proxy_classes: %kernel.debug%
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: %mailer_transport%
    host:      %mailer_host%
    username:  %mailer_user%
    password:  %mailer_password%
    spool:     { type: memory }


fos_rest:
    serializer:
        serialize_null: true
    versioning: true
#    exception:
#        codes:
#            'Symfony\Component\Routing\Exception\ResourceNotFoundException': 404
#            'Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException': 403
    param_fetcher_listener: true
    body_listener: true
#    service:
#        exception_handler: pria.view.exception_wrapper_handler
    format_listener:
        enabled: true
        rules:
            - { path: '^/image', priorities: ['jpeg', 'gif'], fallback_format: false, prefer_extension: true }
            # setting fallback_format to null means that in case of a priority mismatch the next rule will be considered
            - { path: '^/admin', methods: [ 'GET', 'POST', 'PUT'], priorities: [ 'html'], fallback_format: ~, prefer_extension: false }
            # setting fallback_format to null, while setting exception_fallback_format to xml, will mean that in case of an exception, xml will be used
            - { path: '^/api', priorities: [ 'json'], fallback_format: ~, prefer_extension: false }
            - { path: '^/v1', priorities: [ 'json'], fallback_format: ~, prefer_extension: false }
            # setting a priority to */* basically means any format will be matched
            - { path: '^/', priorities: [ 'text/html', '*/*'], fallback_format: html, prefer_extension: true }
    view:
        view_response_listener: 'force'
#        exception_wrapper_handler: pria.view.exception_wrapper_handler
        formats:
            xml: false
            json : true
        templating_formats:
            html: true
        force_redirects:
            html: true
        failed_validation: HTTP_BAD_REQUEST
        default_engine: twig
    routing_loader:
        default_format: json
    exception:
        enabled: true
#        exception_controller: 'pria.exception.controller:showAction'
        codes:
            Symfony\Component\HttpKernel\Exception\BadRequestHttpException: 404
            Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: 403
            Symfony\Component\HttpKernel\Exception\ConflictHttpException: 409
            Symfony\Component\HttpKernel\Exception\NotFoundHttpException: 404
        messages:
            Symfony\Component\HttpKernel\Exception\BadRequestHttpException: true
            Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException: true
            Symfony\Component\HttpKernel\Exception\ConflictHttpException: true
            Symfony\Component\HttpKernel\Exception\HttpException: true
            Symfony\Component\HttpKernel\Exception\NotFoundHttpException: true

fos_http_cache:
    cache_control:
        rules:
            # the controls section values are used in a call to Response::setCache();
            -
                match:
                    path: ^/notes
                    methods: [GET, HEAD]
                headers:
                    cache_control: { public: true, max_age: 15, s_maxage: 30 }
                    last_modified: "-1 hour"
                    vary: [Accept-Encoding, Accept-Language]
